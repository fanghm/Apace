<!DOCTYPE html>
<html lang="en">
<head>
  <title>Apace Action Tracker</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="stylesheet" href="/libs/bootstrap/css/bootstrap.min.css">
  <link rel="stylesheet" type="text/css" href="/libs/dataTables/css/jquery.dataTables.css">
  <link rel="stylesheet" type="text/css" href="/libs/jquery-datetimepicker/jquery.datetimepicker.min.css">
  <link rel="stylesheet" type="text/css" href="/stylesheets/style.css">

  <script type="text/javascript" src="/libs/jquery.min.js"></script>
  <script type="text/javascript" src="/libs/bootstrap/js/bootstrap.min.js"></script>
  <script type="text/javascript" charset="utf8" src="/libs/dataTables/js/jquery.dataTables.js"></script>
  <script type="text/javascript" src="/libs/jquery-datetimepicker/jquery.datetimepicker.full.min.js"></script>
  <script type="text/javascript" src="/libs/moment-with-locales.min.js"></script>
</head>
<body>
<script type="text/javascript">
  var action_map = {{{ json }}};
</script>

<div class="container">
  <img src="/images/logo.png" alt="Apace" height="85px" width="138px">
  <span class="title"><sub>super-fast action tracker</sub></span>

  <p>
    <button type="button" class="btn btn-primary pull-right" data-toggle="modal" data-target="#dlgModal">
      <span class="glyphicon glyphicon-plus"></span> Add an action item
    </button>
  </p>

  <table class="table table-striped table-hover" id="tblAction">
    <thead>
      <tr>
        <th>#</th>
        <th>Action/Task</th>
        <th>Category</th>
        <th>Status</th>
        <th>Owner</th>
        <th>LE</th>
        <th>Last Update</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
    {{#each actions}}
      <tr id="{{_id}}">
        <td></td>
        <td>{{ title    }}</td>
        <td>{{ category }}</td>
        <td>{{ status   }}</td>
        <td>{{ owner    }}</td>
        <td>{{ le_time  }}</td>
        <td>{{ update_at_ago }}</td>
        <td>
          <a class="btn btn-primary" data-id="{{_id}}" data-toggle="modal" data-target="#dlgModal">
            <span class="glyphicon glyphicon-edit"></span>
          </a>
        </td>
      </tr>
    {{/each}}
    </tbody>
  </table>
</div>

<br>
<div class="container">
  <H4>Keyboard shortcuts:</H4>
  <ul>
    <li><kbd>/</kbd>: search</li>
    <li><kbd>ctrl</kbd> + <kbd>a</kbd>: add</li>
    <li><kbd>ctrl</kbd> + <kbd>e</kbd>: edit</li>
    <li><kbd>ctrl</kbd> + <kbd>d</kbd>: delete</li>
    <li><kbd>ctrl</kbd> + <kbd>s</kbd>: save</li>
  </ul>
</div>

<!-- Common modal for add/edit an action item-->
<div id="dlgModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="lblModal">
  <div class="modal-dialog" role="document">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title" id="lblModal">Add|Edit an action point</h4>
      </div>

      <div class="modal-body">
        <form>
          <div class="form-group">
            <label for="title">Action/Task:</label>
            <input class="form-control" id="title" required/>
          </div>

          <div class="form-group">
            <label for="desc">Description:</label>
            <textarea class="form-control" style="resize: vertical;max-height:400px; min-height:80px;" id="desc"></textarea>
          </div>

          <div class="form-group">
            <label for="category">Category:</label>
            <select class="form-control" id="category" required>
              <option value="" selected>-- Select --</option>
              <option value="CIF meeting">CIF meeting</option>
              <option value="RCA/EDA">RCA/EDA</option>
              <option value="Retrospective">Retrospective</option>
              <option value="Other">Other</option>
            </select>
          </div>

          <div class="form-group">
            <label for="le">LE:</label>
            <input class="form-control" id="le"/>
          </div>

          <div class="form-group" id="grp_status" style="display:none;">
            <label for="optradio">Status:</label><br>
            <label class="radio-inline"><input type="radio" name="status" value='New'>New</label>
            <label class="radio-inline"><input type="radio" name="status" value='Ongoing'>Ongoing</label>
            <label class="radio-inline"><input type="radio" name="status" value='Done'>Done</label>
            <label class="radio-inline"><input type="radio" name="status" value='Cancelled'>Cancelled</label>
            <label class="radio-inline"><input type="radio" name="status" value='Blocked'>Blocked</label>
            <label class="radio-inline"><input type="radio" name="status" value='Suspended'>Suspended</label>
          </div>

          <div class="form-group">
            <label for="owner">Owner:</label>
            <input class="form-control" id="owner"/>
          </div>

          <div class="form-group" id="grp_history" style="display:none;">
            <label for="history">History:</label>
            <textarea class="form-control" style="resize: vertical;max-height:400px; min-height:100px;" id="history"></textarea>
          </div>

        </form>
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button id="deleteAction" type="button" class="btn btn-danger" style="display:none;">Delete</button>
        <button id="saveAction" type="button" class="btn btn-success">Save</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">

  $(document).ready( function () {

    $('#le').datetimepicker({
      //timepicker: false,
      defaultTime:'17:00',
      closeOnDateSelect:true,
      format: 'Y/m/d H:i',
      weeks: true,
      minDate: 0, // no later than today, not valid when edit an item
      lang: 'zh',
    });

    var t = $('#tblAction').DataTable( {
      // "columnDefs": [ {
      //     "searchable": false,
      //     "orderable": false,
      //     "targets": 0
      //   } ],
      // "order": [[ 1, 'asc' ]]
    });

    t.on( 'order.dt search.dt', function () {
      t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
          cell.innerHTML = i+1;
      } );
    } ).draw();

    // prevent modal loading previous data
    // note: only modal data are removed, data-* attributes bounded on the trigger button need extra handling/reset
    $('body').on('hidden.bs.modal', '.modal', function () {
      $(this).removeData('bs.modal'); // modal-title not removed somehow
    });

    $('#dlgModal').on('shown.bs.modal', function() {
      $('#title').focus();
    });

    // Triggered when modal is about to be shown
    $('#dlgModal').on('show.bs.modal', function (event) {
      var button = $(event.relatedTarget);  // Button that triggered the modal
      var dataId = button.data('id');       // Extract info from data-* attributes
      var btnId = button.attr("id");
      // console.log('btnId: ' + btnId + ', dataId: ' + dataId );

      if ( typeof(button) === 'undefined'  // modal triggered by keyboard shortcut
            || (typeof(dataId) === 'undefined' || dataId === '') ) {  // add
        $(".modal-title").text( 'Add an action point' );

        $("#deleteAction").hide();
        $("#grp_history").hide();
        $("#grp_status").hide();
        $(".modal-footer #saveAction").data("id", "");  // mandatory!

        $(".modal-body #title").val("");
        $(".modal-body #desc").val("");
        $('.modal-body #category').val("");
        $(".modal-body #le").val("");
        $(".modal-body #owner").val("");
        //$("input[name=status][value='New']").attr('checked', 'checked');

      } else {  // edit/delete

        $(".modal-title").text( 'Edit an action point' );

        var row = button.closest("tr").find("td:nth-child(1)").text();
        // console.log("dataId: " + dataId + " row: " + row);

        // set data-id attr for db update, set data-row for view update
        $(".modal-footer #saveAction").data("id", dataId);
        $(".modal-footer #saveAction").data("row", row);

        $(".modal-footer #deleteAction").data("id", dataId);
        $(".modal-footer #deleteAction").data("row", row);
        console.log("#saveAction.data-id:" + $(".modal-footer #saveAction").data("id"));
        console.log("#deleteAction.data-row:" + $(".modal-footer #deleteAction").data("row"));

        $("#deleteAction").show();
        $("#grp_history").show();
        $("#grp_status").show();

        //console.log('update action: ' + JSON.stringify(action_map[dataId]) );
        $(".modal-body #title").val( action_map[dataId].title );
        $(".modal-body #desc").val( action_map[dataId].desc );
        $('.modal-body #category').val( action_map[dataId].category );
        $('.modal-body #le').val( moment(action_map[dataId].le).format('YYYY/MM/DD HH:mm') );
        $(".modal-body #owner").val( action_map[dataId].owner );

        //console.log("action_map[dataId].history: " + action_map[dataId].history);
        $(".modal-body #history").val( action_map[dataId].history );
        $("input[name=status][value='" + action_map[dataId].status + "']").prop("checked", true);

      }

    });

    // delete an action
    $('#deleteAction').on( 'click', function () {
      var dataId = $(this).data('id');
      var row = $(this).data('row');
      // console.log("onclick #deleteAction.data-id: " + dataId + ", data-row: " + row);

      var yes = confirm('Are you sure you want to delete this action?');
      if (yes) {
        $.ajax({
          type: 'DELETE',
          url: '/delete/' + dataId
        }).done(function( res ) {
          if (res.msg === '') {
            var tr = $('#' + dataId);
            // console.log("deleted: " + JSON.stringify(tr));
            // draw(false): redraw the table keeping the current paging
            t.row(tr).remove().draw( false );
          } else {
            alert('Error: ' + res.msg);
          }
        });

        $('#dlgModal').modal('hide');
      } else {
        return false;
      }

    });

    // add/edit an action
    $('#saveAction').on( 'click', function () {
      var row = $(this).data('row');
      var dataId = $(this).data("id");  // or: $(".modal-footer #saveAction").data("id");
      // console.log("onclick #saveAction.data-id: " + dataId + ", data-row: " + row);

      // data validation
      var allowSubmit = true;
      $.each($('form input:text'), function(index, formField) {
        if($(formField).val().trim().length == 0) {
          alert( 'Field cannot be empty: ' + $(formField).attr("id") );
          allowSubmit = false;
          return false;
        }
      });

      if ( $('#category').val().trim().length == 0 ) {
        alert( 'Field cannot be empty: ' + 'category' );
        allowSubmit = false;
      }

      if (!allowSubmit) {
        return false;
      }

      var data = {
        title:    $('#title').val(),
        desc:     $('#desc').val(),
        category: $('#category').val(),
        le:       moment( $('#le').val().trim() , 'YYYY-MM-DD HH:mm'),
        owner:    $('#owner').val(),
        status:   'New',
      };

      var addAction = true;
      var url = '/add';
      var method = 'POST';

      if (typeof dataId !== 'undefined' && dataId != '') {
        addAction = false;
        url = '/update/' + dataId;
        method = 'PUT';

        data.history = $('#history').val();
        data.status = $('input[name=status]:checked').val();
      }

      $.ajax({
        url: url,
        type: method,
        dataType: 'json',
        data: JSON.stringify(data),
        contentType: 'application/json',

        success: function(action, textStatus, jQxhr) {
          console.log('data to ' + (addAction ? 'add' : 'edit') + ': ' + JSON.stringify(data));
          //console.log('saved: ' + JSON.stringify(action));

          // TODO: display inserted/updated item on current page, no scrolling to other page
          if (addAction) {
            moment.locale('zh-cn');

            t.row.add( [
              '',
              action.title,
              action.category,
              action.status,
              action.owner,
              moment(action.le).format('YYYY-MM-DD HH:mm'),
              moment(action.update_at).fromNow(),
              '<a class="btn btn-primary" data-id="' + action._id + '" data-toggle="modal" data-target="#dlgModal"> <span class="glyphicon glyphicon-edit"></span> </a>'
            ] ).draw( false );

            action_map[action._id] = action;

          } else {  // update
            //var tr = $('#tblAction tbody tr').eq(row);
            var tr = $('#' + dataId);
            //console.log('update row: ' + row + ', tr:\n' + tr.html());

            tr.find('td:eq(0)').html( row ); // col 1
            tr.find('td:eq(1)').html( action.title ); // col 2
            // console.log('td title:' + tr.find('td:eq(1)').html());

            tr.find("td:nth-child(3)").html( action.category ); // col 3
            tr.find("td:nth-child(3)").html( action.status );
            tr.find("td:nth-child(3)").html( action.owner );
            tr.find("td:nth-child(3)").html( moment(action.le).format('YYYY-MM-DD HH:mm') );
            tr.find("td:nth-child(3)").html( moment(action.update_at).fromNow() );

            t.row(tr).invalidate().draw(false);
            //console.log('updated tr to:' + $('#' + dataId).html());  // TODO: undefined when not visible in current page

            // update action_map (for later update of same item as we read data from the map to render modal)
            action_map[dataId] = action;
          }

          $('#dlgModal').modal('hide');
        },

        error: function( jqXhr, textStatus, errorThrown ) {
            console.log( errorThrown );
        }
      });

    });  // end of onclick

    /* --- keyboard shortcut --- */
    $(document).keydown(function(e) {
      console.log('key:' + e.which);

      switch(e.which) {
        case 65: // 'a' - add
          if (e.ctrlKey) {
            $('#dlgModal').modal('show');

            e.preventDefault();
            e.stopPropagation();
          }
          break;

        case 69: // 'e' - edit
          if (e.ctrlKey && !($("#dlgModal").data('bs.modal') || {isShown: false}).isShown) {
            $('#dlgModal').modal('show');
          }
          break;

        case 68: // 'd' - delete
          if (e.ctrlKey) {
            // check is modal is show
            if ( ($("#dlgModal").data('bs.modal') || {isShown: false}).isShown ) {
              $('#deleteAction').trigger('click');
            } else {
              // TODO: delete selected item
            }

            e.preventDefault();
            e.stopPropagation();
          }
          break;

        case 83: // 's' - save
          if (e.ctrlKey && ($("#dlgModal").data('bs.modal') || {isShown: false}).isShown) {
            $('#saveAction').trigger('click');

            e.preventDefault();
            e.stopPropagation();
          }
          break;

        case 191: // '/' - search
          if (!($("#dlgModal").data('bs.modal') || {isShown: false}).isShown) {
            $('.dataTables_filter input').focus();

            e.preventDefault();
            e.stopPropagation();
          }
          break;

        default:
          break;
      }
    });

  });

</script>
</body>
</html>